\chapter{Query Evaluation, Results and Discussion}\label{results}
To analyse the functionality of the database systems, I devised a number of queries with ranging difficulties. The aim of the queries was to identify any limitations of the systems, and to discover the efficacy of the systems. Chapter \ref{evaluationstrategy} provides a detailed explanation of the reasoning behind the queries and this chapter discusses the output and results of running the queries in the various query languages. This chapter gives insight into the difficulty of writing the query, the usefulness of the output, the time taken for the query to run and any challenges I faced when actioning the evaluation strategy. Also included in this chapter is a general discussion which summarises the capabilities of the systems and aims to provide one with an understanding of the limitations of each of the systems, section  \ref{discussion}.

\section{Query Output}\label{output}
The screenshots, tables, graphs and charts illustrated in this chapter are based on the results of running the competency based queries on each database system. Table \ref{tab:competency} details each of the devised queries in English, provides a short description of the data expected to be returned and a rating characterisation. Each query has a rating with a range of 1 to 5, and is to be used as a guide to aid the reader into understanding \textbf{1.} General complexity of the query. \textbf{2.} Fruitfulness of the data returned. \textbf{3.} Level of expectancy that the system will be able to accomplish the query (on a scale of 1 expected, to 5 unexpected).

\newpage
\begin{table}[H]
\centering
\resizebox{\textwidth}{!}{
\begin{tabular}{|c|l|l|c|}
\hline
\textbf{Query Number} & \multicolumn{1}{c|}{\textbf{English}} & \multicolumn{1}{c|}{\textbf{Expected return}} & \textbf{Rating} \\ \hline
1 & All structures at Theiler Stage X. & Theiler Stage. Structure ID. & 1 \\ \hline
2 & \begin{tabular}[c]{@{}l@{}}All structures between Theiler\\ Stage X and Y.\end{tabular} & \begin{tabular}[c]{@{}l@{}}Structure ID. Theiler Stage X. Theiler Stage\\ Y.\end{tabular} & 1 \\ \hline
3 & Where is Gene X expressed? & \begin{tabular}[c]{@{}l@{}}Name of the gene. The structure where the\\ gene was found. The EMAGE ID where the\\ gene was found.\end{tabular} & 2 \\ \hline
4 & What is expressed in structure X? & \begin{tabular}[c]{@{}l@{}}Name of the gene(s) found in the structure.\\ The structure ID. The name of the structure.\\ The Theiler Stage(s) of the structure. The\\ EMAGE ID of the structure.\end{tabular} & 3 \\ \hline
5 & \begin{tabular}[c]{@{}l@{}}Which genes are stored in\\ structures X and Y?\end{tabular} & \begin{tabular}[c]{@{}l@{}}Name of the gene(s). ID of the gene(s). ID\\ of structure X. ID of structure Y.\end{tabular} & 4 \\ \hline
6 & \begin{tabular}[c]{@{}l@{}}Which Genes are most\\ commonly co-expressed?\end{tabular} & \begin{tabular}[c]{@{}l@{}}Name of the gene(s). Count of unique\\ structures the gene is expressed in.\end{tabular} & 5 \\ \hline
7 & Calculate transitive closure. & The name of each structure and its parent. & 5 \\ \hline
\end{tabular}}
\caption{Competency queries for each database system.}
\label{tab:competency}
\end{table}

\subsection*{Query 1 - All structures at Theiler Stage X}\label{query1}
The following code snippets represent the queries written for competency question 1.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery1]
SELECT t1.accession AS StructureID, t1.term AS StructureName, t2.theilerstage AS TheilerStage, t2.dpc AS DPC
FROM AnatomyStructures AS t1
INNER JOIN Stages AS t2
ON t1.stage_id = t2.id
WHERE t2.theilerstage = 4
ORDER BY 1
\end{lstlisting}
\item \textbf{MongoDB}
\begin{lstlisting}[language=json, caption=, label=code:mongoquery1]
db.emage.find({ "stage.theiler_stage": "4" }).pretty()
\end{lstlisting}
\item \textbf{Neo4j}
\begin{lstlisting}[language=SQL, caption=, label=code:neoquery1]
MATCH (struct:AnatomyStructure)-[r]->(stage:Stage)
WHERE stage.theilerStage = 4
RETURN struct, r, stage;
\end{lstlisting}
\item \textbf{Cassandra}
\begin{lstlisting}[language=SQL, caption=, label=code:cassquery1]
SELECT *
FROM structurebystage
WHERE theilerstage = 4
AND detected = true;
\end{lstlisting}
\end{itemize}

\subsection*{Query 2 - All structures between Theiler Stage X and Y}\label{query2}
The following code snippets represent the queries written for competency question 2.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery2]
SELECT t1.accession, t2.theilerstage
FROM AnatomyStructures AS t1
INNER JOIN Stages AS t2
ON t1.stage_id = t2.id
INNER JOIN TextAnnotations AS t3
ON t1.id = t3.structure_id
WHERE t2.theilerstage BETWEEN 4 AND 7
AND t3.detected = 1
GROUP BY 1;
\end{lstlisting}
\item \textbf{MongoDB}
\begin{lstlisting}[language=json, caption=, label=code:mongoquery2]
db.emage.find({$and: [ { "stage.theilerstage": {$gte : 4 }},{ "stage.theilerstage": {$lte : 7 }}, {"textannotation.strength" : "detected"}]}).pretty()
\end{lstlisting}
\item \textbf{Neo4j}
\begin{lstlisting}[language=SQL, caption=, label=code:neoquery2]
MATCH (struct:AnatomyStructure)-[r]->(stage:Stage)
WHERE stage.theilerStage >= 4 AND stage.theilerStage <=7
RETURN struct, r, stage;
\end{lstlisting}
\item \textbf{Cassandra}
\begin{lstlisting}[language=SQL, caption=, label=code:cassquery2]
SELECT *
FROM structurebystage
WHERE theilerstage IN (4,5,6,7)
AND detected = true;
\end{lstlisting}
\end{itemize}
\subsection*{Query 3 - Where is Gene X experessed?}\label{query3}
The following code snippets represent the queries written for competency question 3.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery3]
SELECT t1.name AS GeneID, t2.emage_id AS EMAGE_ID, t3.accession AS StructureID
FROM Genes AS t1
INNER JOIN TextAnnotations AS t2
ON t1.id = t2.gene_id
INNER JOIN AnatomyStructures AS t3
ON t2.structure_id = t3.id
WHERE t2.detected = 1
AND t1.name = 'Hoxb13'
ORDER BY 2,3;
\end{lstlisting}
\item \textbf{MongoDB}
\begin{lstlisting}[language=json, caption=, label=code:mongoquery3]
db.emage.find({ $and: [ { "textannotation.gene.name": "Hoxb13" }, { $or: [ { "textannotation.strength": "detected" }, { "textannotation.strength": "strong" } ] } ] }).pretty();
\end{lstlisting}
\item \textbf{Neo4j}
\begin{lstlisting}[language=SQL, caption=, label=code:neoquery3]
MATCH (g:Gene)<-[]-(TextAnnotation)-[]->(a:AnatomyStructure)
WHERE g.name = 'Hoxb13'
RETURN distinct g.name AS Name,g.accession AS ID, a.accession AS  StructureID, a.term AS Term
ORDER BY a.accession ASC
\end{lstlisting}
\item \textbf{Cassandra}
\begin{lstlisting}[language=SQL, caption=, label=code:cassquery3]
SELECT *
FROM structurebygene1
WHERE genename = 'Hoxb13'
AND detected = true
ALLOW FILTERING;
\end{lstlisting}
\end{itemize}
\subsection*{Query 4 - What is expressed in structure X?}\label{query4}
The following code snippets represent the queries written for competency question 4.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery4]
SELECT t1.name AS GeneName, t2.accession AS StructureID, t2.term AS TermName, t4.theilerstage AS TheilerStage, t3.emage_id AS EMAGE_ID
FROM Genes AS t1
INNER JOIN emage.TextAnnotations AS t3
ON t1.id = t3.gene_id
INNER JOIN emage.AnatomyStructures AS t2
ON t3.structure_id = t2.id
INNER JOIN Stages AS t4
ON t2.stage_id = t4.id
INNER JOIN Assays AS t5
ON t3.emage_id = t5.emage_id
WHERE t3.detected = 1
AND t2.accession = 17451
ORDER BY 5;
\end{lstlisting}
\item \textbf{MongoDB}
\begin{lstlisting}[language=json, caption=, label=code:mongoquery4]
db.emage.find({ "textannotation.anatomystructure.structureID": 17451 },{},{"_id":1})
\end{lstlisting}
\item \textbf{Neo4j}
\begin{lstlisting}[language=SQL, caption=, label=code:neoquery4]
MATCH (stage:Stage)<-[]-(struct:AnatomyStructure)<-[]-(text1:TextAnnotation)-[]->(assay:Assay)
WHERE struct.accession = 17451
RETURN struct.accession AS StructureID, struct.term AS Term,stage.theilerStage AS TheilerStage, assay.emageID AS EMAGEID
ORDER BY assay.emageID ASC
\end{lstlisting}
\item \textbf{Cassandra}
\begin{lstlisting}[language=SQL, caption=, label=code:cassquery4]
SELECT *
FROM textannotations1
WHERE structureid = 17451
AND detected = true
ALLOW FILTERING;
\end{lstlisting}
\end{itemize}
\subsection*{Query 5 - Which Genes are stored in structures X and Y?}\label{query5}
The following code snippets represent the queries written for competency question 5.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery5]
SELECT t1.name AS GeneName
FROM Genes AS t1
INNER JOIN TextAnnotations AS t3
ON t1.id = t3.gene_id
INNER JOIN AnatomyStructures AS t2
ON t2.id = t3.structure_id
WHERE t3.detected = 1
AND t2.accession IN (16062, 16069)
GROUP BY 1
HAVING COUNT(DISTINCT t2.accession) > 1;
\end{lstlisting}
\item \textbf{Neo4j}
\begin{lstlisting}[language=SQL, caption=, label=code:neoquery5]
MATCH (n:Gene)<-[]-(t:TextAnnotation)-[]->(a:AnatomyStructure)
with count (distinct (a.accession)) as c, t as ta, a as an, n as ge
WHERE ta.detected = 1 and an.accession = 16062 or an.accession = 16069 and c > 1
return distinct ge.name
order by ge.name
\end{lstlisting}
\end{itemize}
\subsection*{Query 6 - Which Genes are most commonly co-expressed?}\label{query6}
The following code snippets represent the queries written for competency question 6.
\begin{itemize}
\item \textbf{MySQL}
\begin{lstlisting}[language=SQL, caption=, label=code:mysqlquery6]
SELECT t1.name AS GeneName, COUNT(DISTINCT t2.accession) AS Co_Expressed_Count
FROM Genes AS t1
INNER JOIN TextAnnotations AS t3
ON t1.id = t3.gene_id
INNER JOIN AnatomyStructures AS t2
ON t2.id = t3.structure_id
WHERE t3.detected = 1
GROUP BY 1
HAVING COUNT(DISTINCT t2.accession) > 1
ORDER BY 2 DESC
LIMIT 5;
\end{lstlisting}
\end{itemize}
\subsection*{Query 7 - Calculate transitive closure}\label{query7}
The following code snippets represent the queries written for competency question 6.
\begin{itemize}
\item \textbf{MySQL}
\section{Discussion}\label{discussion}